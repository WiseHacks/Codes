#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define FOR(I,a,b) for(int I=a;I<b;I++)
#define FORit(it,a) for(auto it=a.begin();it!=a.end();it++)
#define ROF(I,a,b) for(int I=a;I>=b;I--)
#define vec vector
#define vi vec<int>
#define vll vec<ll>
#define pb push_back
#define pp pop_back
#define all(x) x.begin(),x.end()
#define testcases ll t;cin>>t;while(t--)
#define mem(a,k) memset(a,k,sizeof(a))
#define FF first
#define SS second
#define MP(x,y) make_pair(x,y)
#define rt return
#define br break
#define ct continue
#define elif else if
#define ii pair<int,int>
#define vecin(a,n,index) for(int I=index;I<n;I++)cin>>a[I]
#define vecout(a,n,index) for(int I=index;I<n;I++)cout<<a[I]<<" ";cout<<endl;
//ll mod = 1000000007;

/*vi ad[10001];
vi vs(10001);
vi d(10001, 10001);
queue<int> q;
void bfs(int v, int dis) {
	q.push(v);
	d[v] = 0;
	while (q.size() != 0) {
		int cur = q.front();
		vs[cur] = 1;
		q.pop();
		for (auto k : ad[cur]) {
			if (!vs[k]) {
				d[k] = min(d[k], d[cur] + 1);
				q.push(k);
			}
		}
	}
}*/
vi ad[10001];
vi vs(10001);
vi d(10001, 0);
queue<int> q;
void bfs(int v) {
	q.push(v);
	d[v]=0;
	while (q.size() != 0) {
		int cur = q.front();
		vs[cur] = 1;
		q.pop();
		for (auto k : ad[cur]) {
			if (!vs[k]) {
				vs[k] = 1;
				d[k] = (d[cur] + 1);
				q.push(k);	
			}
		}
	}
}
void solve() {
	int n, m;
	cin >> n >> m; // m = n - 1;
	while (m--) {
		int u, v;
		cin >> u >> v;
		ad[u].pb(v);
		ad[v].pb(u);
	}
	int root = 3;
	bfs(root);
	vecout(d, n + 1, 1);

}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(false);	cin.tie(NULL);	cout.tie(NULL);
	// START FROM HERE :)
	solve();
}

