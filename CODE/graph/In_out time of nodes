#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define ull unsigned long long int
#define FOR(I,a,b) for(int I=a;I<b;I++)
#define FORit(it,a) for(auto it=a.begin();it!=a.end();it++)
#define ROF(I,a,b) for(int I=a;I>=b;I--)
#define vec vector
#define vi vec<int>
#define vll vec<ll>
#define pb push_back
#define pp pop_back
#define all(x) x.begin(),x.end()
#define testcases ll t;cin>>t;while(t--)
#define mem(a,k) memset(a,k,sizeof(a))
#define FF first
#define SS second
#define MP(x,y) make_pair(x,y)
#define rt return
#define br break
#define ct continue
#define elif else if
#define ii pair<int,int>
#define vecin(a,n,index) for(int I=index;I<n;I++)cin>>a[I]
#define vecout(a,n,index) for(int I=index;I<n;I++)cout<<a[I]<<" ";cout<<endl;
//ll mod = 1000000007;
vi ad[1001];
vi vs(1001);
vi in(1001);
vi out(1001);
int timer = 1;
void dfs(int v) {
	vs[v] = 1;
	in[v] = timer; //we reach v
	timer++; //increament
	for (auto k : ad[v]) {
		if (!vs[k]) {
			dfs(k);
		}
	}
	out[v] = timer; //we leave 
	timer++; //increament
}
void solve() {
	int n, m;
	cin >> n >> m;
	while (m--) {
		int u, v;
		cin >> u >> v;
		ad[u].pb(v);
		ad[v].pb(u);
	}
	dfs(1);
	/*
	vecout(in, 6, 1);
	vecout(out, 6, 1);
	check if node1 lies in subtree of node2
	-->

	if( in[node2]<in[node1] && out[node1]<out[node2] )
		rt true;
	*/

}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	ios_base::sync_with_stdio(false);	cin.tie(NULL);	cout.tie(NULL);
	// START FROM HERE :)
	solve();
}

